package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/joho/godotenv"
)

type User struct {
	ID       int
	Username string
	Email    string
}

func main() {
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error loading .env file")
	}

	// pgx pool starts a pool thats concurrency safe
	dbpool, err := pgxpool.New(context.Background(), os.Getenv("DATABASE_URL"))

	// connects to db via url
	if err != nil {
		fmt.Fprintf(os.Stderr, "Unable to connect to database: %v\n", err)
		os.Exit(1)
	}
	defer dbpool.Close()

	var user User
	err = dbpool.QueryRow(context.Background(), "SELECT * FROM users;").Scan(&user.ID, &user.Username, &user.Email)
	if err != nil {
		fmt.Fprintf(os.Stderr, "QueryRow failed: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("user: id", user.ID)
	fmt.Println("user: username", user.Username)
	fmt.Println("user: email", user.Email)

}
