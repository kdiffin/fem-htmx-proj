// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (username, password_hash) VALUES ($1, $2)
`

type CreateUserParams struct {
	Username     string
	PasswordHash string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser, arg.Username, arg.PasswordHash)
	return err
}

const getUserCredentials = `-- name: GetUserCredentials :one
SELECT id, password_hash FROM users WHERE username=$1
`

type GetUserCredentialsRow struct {
	ID           int32
	PasswordHash string
}

func (q *Queries) GetUserCredentials(ctx context.Context, username string) (GetUserCredentialsRow, error) {
	row := q.db.QueryRow(ctx, getUserCredentials, username)
	var i GetUserCredentialsRow
	err := row.Scan(&i.ID, &i.PasswordHash)
	return i, err
}
