// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type VaultKindType string

const (
	VaultKindTypeDefault       VaultKindType = "default"
	VaultKindTypeCollaborative VaultKindType = "collaborative"
)

func (e *VaultKindType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = VaultKindType(s)
	case string:
		*e = VaultKindType(s)
	default:
		return fmt.Errorf("unsupported scan type for VaultKindType: %T", src)
	}
	return nil
}

type NullVaultKindType struct {
	VaultKindType VaultKindType
	Valid         bool // Valid is true if VaultKindType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVaultKindType) Scan(value interface{}) error {
	if value == nil {
		ns.VaultKindType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.VaultKindType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVaultKindType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.VaultKindType), nil
}

type VaultRelRoleType string

const (
	VaultRelRoleTypeOwner        VaultRelRoleType = "owner"
	VaultRelRoleTypeCollaborator VaultRelRoleType = "collaborator"
	VaultRelRoleTypeViewer       VaultRelRoleType = "viewer"
)

func (e *VaultRelRoleType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = VaultRelRoleType(s)
	case string:
		*e = VaultRelRoleType(s)
	default:
		return fmt.Errorf("unsupported scan type for VaultRelRoleType: %T", src)
	}
	return nil
}

type NullVaultRelRoleType struct {
	VaultRelRoleType VaultRelRoleType
	Valid            bool // Valid is true if VaultRelRoleType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVaultRelRoleType) Scan(value interface{}) error {
	if value == nil {
		ns.VaultRelRoleType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.VaultRelRoleType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVaultRelRoleType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.VaultRelRoleType), nil
}

type Session struct {
	ID        string
	UserID    pgtype.UUID
	CreatedAt pgtype.Timestamp
}

type Tag struct {
	ID        pgtype.UUID
	Name      string
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	UserID    pgtype.UUID
	VaultID   pgtype.UUID
}

type TagTaskRelation struct {
	ID     pgtype.UUID
	TagID  pgtype.UUID
	TaskID pgtype.UUID
}

type Task struct {
	ID        pgtype.UUID
	Name      string
	Idea      string
	Completed bool
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
	UserID    pgtype.UUID
	VaultID   pgtype.UUID
}

type User struct {
	ID             pgtype.UUID
	Username       string
	PasswordHash   string
	CreatedAt      pgtype.Timestamp
	UpdatedAt      pgtype.Timestamp
	PathToPfp      string
	DefaultVaultID pgtype.UUID
}

type Vault struct {
	ID          pgtype.UUID
	Name        string
	Description string
	Locked      bool
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
	Kind        VaultKindType
}

type VaultUserRelation struct {
	ID      pgtype.UUID
	VaultID pgtype.UUID
	UserID  pgtype.UUID
	Role    VaultRelRoleType
}
